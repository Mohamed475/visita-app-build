{"version":3,"file":"static/js/848.f4b0d765.chunk.js","mappings":"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","sources":["place/components/PlaceNotFound.js","shared/components/Map/Map.js","place/components/PlaceItem.js","place/components/PlaceList.js","place/pages/UserPlaces.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport Button from '../../shared/components/Button/Button';\r\n\r\nconst StyledNotFoundPlace = styled.div`\r\n  height: 70vh;\r\n  font-size: 4rem;\r\n  font-weight: 600;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n`;\r\n\r\nconst PlaceNotFound = (props) => {\r\n  return (\r\n    <StyledNotFoundPlace>\r\n      <p>{props.errorMessage || 'There is no place!'}</p>\r\n      {props.buttonText && props.to && (\r\n        <Button to={props.to || '/'}>{props.buttonText || 'HOME'}</Button>\r\n      )}\r\n    </StyledNotFoundPlace>\r\n  );\r\n};\r\n\r\nexport default PlaceNotFound;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledMap = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 50vw;\r\n  }\r\n`;\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n  const { lat, lng } = props.location;\r\n  const zoomValue = 10;\r\n\r\n  // It will run only once when the component is mounted, and if one of the dependencies changes, it will run again\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: {\r\n        lat: +lat,\r\n        lng: +lng,\r\n      },\r\n      zoom: zoomValue,\r\n    });\r\n\r\n    new window.google.maps.Marker({\r\n      position: {\r\n        lat: +lat,\r\n        lng: +lng,\r\n      },\r\n      map,\r\n    });\r\n  }, [lat, lng]);\r\n\r\n  // Check the existing of map.\r\n  return !window.google ? (\r\n    <div>Something went wrong, unable to display the map!</div>\r\n  ) : (\r\n    <StyledMap ref={mapRef}>Map</StyledMap>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n\r\n// API key page: https://console.cloud.google.com/apis/credentials?project=civic-axon-350205\r\n","import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../../shared/components/Button/Button';\r\nimport Modal from '../../shared/components/UI/Modal';\r\nimport Map from '../../shared/components/Map/Map';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nconst StyledPlaceItem = styled.li`\r\n  width: 40vw;\r\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\r\n  border-radius: 1rem;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 5rem;\r\n  }\r\n\r\n  .place-item__image {\r\n    flex: 1;\r\n    height: 30rem;\r\n    overflow: hidden;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .place-item__info {\r\n    padding: 4rem 0 3rem;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 1.5rem;\r\n    border-bottom: 0.1rem solid #000;\r\n\r\n    .place-item__name {\r\n      font-style: italic;\r\n      font-weight: 600;\r\n      font-size: 3rem;\r\n    }\r\n\r\n    .place-item__address {\r\n      font-size: 1.9rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .place-item__description {\r\n      font-size: 1.6rem;\r\n      padding: 0 2rem;\r\n    }\r\n\r\n    .place-item__rating {\r\n      font-size: 3rem;\r\n    }\r\n\r\n    .place-item__rating--error {\r\n      font-size: 2.3rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  .place-item__actions {\r\n    padding: 3rem 0;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  /* Rsponsive */\r\n  @media (max-width: 768px) {\r\n    width: 80vw;\r\n  }\r\n`;\r\nconst PlaceItem = (props) => {\r\n  // Auth context.\r\n  const { isAuthenticated, userId, token } = useContext(AuthContext);\r\n\r\n  // Map modal handlers.\r\n  const [showMapModal, setShowMapModal] = useState(false);\r\n  const openMapModelHandler = (e) => {\r\n    // Prevent default behavior of the link.\r\n    e.preventDefault();\r\n\r\n    setShowMapModal(true);\r\n  };\r\n  const closeMapModalHandler = () => {\r\n    setShowMapModal(false);\r\n  };\r\n\r\n  // Remove modal handlers.\r\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\r\n  const openRemoveModalHandler = () => {\r\n    setShowRemoveModal(true);\r\n  };\r\n  const closeRemoveModalHandler = () => {\r\n    setShowRemoveModal(false);\r\n  };\r\n\r\n  const removePlaceHandler = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL_API_V1}/places/${props.id}`,\r\n        {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      const result = await res.json();\r\n\r\n      if (result.error) {\r\n        console.log(result.error);\r\n      }\r\n\r\n      props.onDelete(props.id);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    closeRemoveModalHandler();\r\n  };\r\n\r\n  // Create stars rating from 0 to 5\r\n  const createStars = (rating) => {\r\n    if (rating <= 0)\r\n      return <span className=\"place-item__rating--error\">No Rating!</span>;\r\n\r\n    return (\r\n      <ReactStars count={rating} value={rating} edit={false} isHalf={true} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledPlaceItem className=\"place-item\">\r\n      {/* Modal */}\r\n      {showMapModal && (\r\n        <Modal\r\n          closeModal={closeMapModalHandler}\r\n          show={showMapModal}\r\n          buttonText=\"Close\"\r\n          width=\"45vw\"\r\n          widthResponsive=\"80vw\"\r\n          height=\"50vh\"\r\n          heightResponsive=\"40vh\"\r\n          button={true}\r\n          modalPadding=\"0\"\r\n          modalBorder=\"2px solid #fafafa\"\r\n          buttonBackgroundColor=\"#fff\"\r\n          buttonBackgroundColorHover=\"#000\"\r\n          buttonTextColor=\"#000\"\r\n          buttonTextColorHover=\"#fff\"\r\n          buttonFontSize=\"1.5rem\"\r\n        >\r\n          {<Map location={props.coordinates} /> || 'Unable to display the map!'}\r\n        </Modal>\r\n      )}\r\n      {showRemoveModal && (\r\n        <Modal\r\n          show={showRemoveModal}\r\n          closeModal={closeRemoveModalHandler}\r\n          width=\"30vw\"\r\n          height=\"20vh\"\r\n          widthResponsive=\"80vw\"\r\n          heightResponsive=\"20vh\"\r\n          modalBackgroundColor=\"#fff\"\r\n          modalTextColor=\"#000\"\r\n          modalFontSize=\"2.2rem\"\r\n          modalBorderRadius=\"10px\"\r\n          modalBorder=\"1px solid #fff\"\r\n          modalPadding=\"0 0 3rem 0\"\r\n          overlayBackgroundColor=\"rgba(0,0,0,0.65)\"\r\n          button={true}\r\n          buttonText=\"confirm\"\r\n          buttonBackgroundColor=\"#830000\"\r\n          buttonBackgroundColorHover=\"salmon\"\r\n          buttonTextColor=\"#fff\"\r\n          buttonTextColorHover=\"#fff\"\r\n          buttonOnClick={removePlaceHandler}\r\n        >\r\n          Are you sure you want to remove this place?\r\n        </Modal>\r\n      )}\r\n      {/* Image */}\r\n      <div className=\"place-item__image\">\r\n        <img\r\n          src={\r\n            props.imageURL\r\n              ? `${process.env.REACT_APP_BACKEND_URL}/${props.imageURL}`\r\n              : 'https://images.unsplash.com/photo-1543783207-ec64e4d95325?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bWFkcmlkfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60'\r\n          }\r\n          alt={props.placeName}\r\n        />\r\n      </div>\r\n      {/* Info */}\r\n      <div className=\"place-item__info\">\r\n        <h2 className=\"place-item__name\">{props.placeName} ✅</h2>\r\n        <p className=\"place-item__address\">{props.address}</p>\r\n        <p className=\"place-item__description\">{props.description}</p>\r\n        {createStars(props.rating)}\r\n      </div>\r\n      {/* Actions */}\r\n      <div className=\"place-item__actions\">\r\n        <Button onClick={openMapModelHandler}>VIEW ON MAP</Button>\r\n        {isAuthenticated && userId === props.creatorId && (\r\n          <Button to={`/${props.creatorId}/places/${props.id}`}>EDIT</Button>\r\n        )}\r\n        {isAuthenticated && userId === props.creatorId && (\r\n          <Button danger onClick={openRemoveModalHandler}>\r\n            REMOVE\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </StyledPlaceItem>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\nimport PlaceItem from './PlaceItem';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPlaceList = styled.div`\r\n  list-style-type: none;\r\n\r\n  /* Responsive */\r\n  @media (max-width: 768px) {\r\n    margin-top: 10rem;\r\n  }\r\n`;\r\n\r\nconst PlaceList = (props) => {\r\n  return (\r\n    <StyledPlaceList>\r\n      {props.places.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          imageURL={place.image}\r\n          placeName={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          coordinates={place.coordinates}\r\n          creatorId={place.creator}\r\n          rating={place.rating}\r\n          location={place.location}\r\n          onDelete={props.onDelete}\r\n        />\r\n      ))}\r\n    </StyledPlaceList>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PlaceList from '../components/PlaceList';\r\nimport LoaderSpinner from '../../shared/components/LoaderSpinner/LoaderSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport PlaceNotFound from '../components/PlaceNotFound';\r\n\r\nconst StyledPlaces = styled.div`\r\n  min-height: 100vh;\r\n  padding: 10rem 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .error-msg {\r\n    color: red;\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst DUMMY_PLACES = [\r\n  {\r\n    id: 1,\r\n    imageURL:\r\n      'https://media.istockphoto.com/photos/paris-aerial-panorama-with-river-seine-and-eiffel-tower-france-picture-id1336449613?b=1&k=20&m=1336449613&s=170667a&w=0&h=atFJsGNEMuHaPll6bRwOkZl8Q0Iz83EcUUi0SvhAeM8=',\r\n    placeName: 'Paris',\r\n    description:\r\n      'Paris is one of the most beautiful cities in the world. It is known worldwide for the Louvre Museum, Notre-Dame cathedral, and the Eiffel tower. It has a reputation of being a romantic and cultural city. The city is also known for its high-quality gastronomy and the terraces of its cafés',\r\n    address: {\r\n      country: 'France',\r\n      city: 'Paris',\r\n    },\r\n    location: {\r\n      lat: 48.8566,\r\n      lng: 2.3522,\r\n    },\r\n    rating: 4.5,\r\n    creator: 'user1',\r\n  },\r\n  {\r\n    id: 2,\r\n    imageURL:\r\n      'https://media.istockphoto.com/photos/shore-of-alexandria-egypt-picture-id157316325?b=1&k=20&m=157316325&s=170667a&w=0&h=qIojlEvA4WbM-LTXhInTzN-kEKGqb7S1uWmqtLC2wwY=',\r\n    placeName: 'Alexandria',\r\n    description:\r\n      'One of Egypts largest cities, Alexandria is also its principal seaport and a major industrial centre. The city lies on the Mediterranean Sea at the western edge of the Nile River delta, about 114 miles (183 km) northwest of Cairo in Lower Egypt. Area city, 116 square miles',\r\n    address: {\r\n      country: 'Egypt',\r\n      city: 'Alexandria',\r\n    },\r\n    location: {\r\n      lat: 31.2001,\r\n      lng: 29.9187,\r\n    },\r\n    rating: 0,\r\n    creator: 'user1',\r\n  },\r\n  {\r\n    id: 3,\r\n    imageURL:\r\n      'https://media.istockphoto.com/photos/nyhavn-copenhagen-denmark-picture-id901375804?b=1&k=20&m=901375804&s=170667a&w=0&h=SjhoV9MfiKSfJ4JVT7y62sfjlpq-OUqfjEhJwMlZQTY=',\r\n    placeName: 'Copenhagen',\r\n    description:\r\n      'Copenhagen is a unique city, characterized by its canals, cycling culture, strong economy, and happy locals. It is actually known as being the happiest city in the world, due to its shorter workdays, free college tuition, more vacation days, and levels of personal interaction.',\r\n    address: {\r\n      country: 'Denmark',\r\n      city: 'Copenhagen',\r\n    },\r\n    location: {\r\n      lat: 55.6761,\r\n      lng: 12.5683,\r\n    },\r\n    rating: 1.5,\r\n    creator: 'user2',\r\n  },\r\n];\r\n\r\nconst UserPlaces = () => {\r\n  const [userPlaces, setUserPlaces] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { userId } = useParams();\r\n  const { userId: authanticatedUserId } = useContext(AuthContext);\r\n\r\n  const getUserPlaces = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL_API_V1}/places/user/${userId}`\r\n      );\r\n      const data = await res.json();\r\n\r\n      if (!res.ok || data.error) {\r\n        setError(data.error.message);\r\n      }\r\n\r\n      if (data.places) {\r\n        setUserPlaces(data.places);\r\n      } else {\r\n        setError('There is no places to display!');\r\n      }\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeletePlace = async (placeId) => {\r\n    setIsLoading(true);\r\n\r\n    const newPlaces = userPlaces.filter((place) => place.id !== placeId);\r\n    setUserPlaces(newPlaces);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserPlaces();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <StyledPlaces>\r\n      {isLoading ? (\r\n        <LoaderSpinner\r\n          isVisable={true}\r\n          color=\"#3498db\"\r\n          backgroundColor=\"#f3f3f3\"\r\n          size=\".5\"\r\n          widthAndHeight=\"4\"\r\n          speedInSecond=\".6\"\r\n        />\r\n      ) : (\r\n        <PlaceList\r\n          places={userPlaces}\r\n          userId={userId}\r\n          onDelete={handleDeletePlace}\r\n        />\r\n      )}\r\n      {!isLoading ? (\r\n        userPlaces.length === 0 || !userPlaces ? (\r\n          authanticatedUserId === userId ? (\r\n            <PlaceNotFound\r\n              errorMessage=\"There is no places to show!\"\r\n              buttonText=\"ADD NEW PLACE\"\r\n              to=\"/places/new\"\r\n            />\r\n          ) : (\r\n            <PlaceNotFound errorMessage=\"There is no places to show!\" />\r\n          )\r\n        ) : (\r\n          ''\r\n        )\r\n      ) : (\r\n        ''\r\n      )}\r\n    </StyledPlaces>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"names":["StyledNotFoundPlace","styled","props","errorMessage","buttonText","to","StyledMap","mapRef","useRef","location","lat","lng","useEffect","map","window","google","maps","Map","current","center","zoom","Marker","position","ref","StyledPlaceItem","rating","useContext","AuthContext","isAuthenticated","userId","token","useState","showMapModal","setShowMapModal","showRemoveModal","setShowRemoveModal","closeRemoveModalHandler","removePlaceHandler","fetch","process","id","method","headers","Authorization","res","json","result","error","console","log","onDelete","className","Modal","closeModal","show","width","widthResponsive","height","heightResponsive","button","modalPadding","modalBorder","buttonBackgroundColor","buttonBackgroundColorHover","buttonTextColor","buttonTextColorHover","buttonFontSize","coordinates","modalBackgroundColor","modalTextColor","modalFontSize","modalBorderRadius","overlayBackgroundColor","buttonOnClick","src","imageURL","alt","placeName","address","description","count","value","edit","isHalf","Button","onClick","e","preventDefault","creatorId","danger","StyledPlaceList","places","place","image","title","creator","StyledPlaces","userPlaces","setUserPlaces","isLoading","setIsLoading","setError","useParams","authanticatedUserId","getUserPlaces","data","ok","message","handleDeletePlace","placeId","newPlaces","filter","LoaderSpinner","isVisable","color","backgroundColor","size","widthAndHeight","speedInSecond","length","PlaceNotFound"],"sourceRoot":""}